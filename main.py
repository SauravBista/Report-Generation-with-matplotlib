# -*- coding: utf-8 -*-
"""Programming_Languages_(start).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sg1NWU-7QuHbzv6pYbJnLEMlEEm384uG

## Get the Data

Either use the provided .csv file or (optionally) get fresh data from running an SQL query on StackExchange:

Follow this link to run the query from [StackExchange](https://data.stackexchange.com/stackoverflow/query/675441/popular-programming-languages-per-over-time-eversql-com) to get your own .csv file

<code>
select dateadd(month, datediff(month, 0, q.CreationDate), 0) m, TagName, count(*)
from PostTags pt
join Posts q on q.Id=pt.PostId
join Tags t on t.Id=pt.TagId
where TagName in ('java','c','c++','python','c#','javascript','assembly','php','perl','ruby','visual basic','swift','r','object-c','scratch','go','swift','delphi')
and q.CreationDate < dateadd(month, datediff(month, 0, getdate()), 0)
group by dateadd(month, datediff(month, 0, q.CreationDate), 0), TagName
order by dateadd(month, datediff(month, 0, q.CreationDate), 0)
</code>
"""

import pandas as pd
import matplotlib.pyplot as plt

# Define column names and load the data from the CSV file
column_names = ['DATE', 'TAG', 'POSTS']
df = pd.read_csv("query.csv", names=column_names)

# Display the first and last 5 rows of the dataframe
print(df.head())
print(df.tail())

# Display the dimensions of the dataframe
print(df.shape)

# Count the number of entries in each column
print(df.count())

# Calculate the total number of posts per language and identify the language with the highest total number of posts
post_per_language = df.groupby('TAG')['POSTS'].sum()
print(post_per_language)

# Convert the 'DATE' column to datetime format and extract year-month periods
df['DATE'] = pd.to_datetime(df['DATE'], errors='coerce')
df['YearMonth'] = df['DATE'].dt.to_period('M')

# Count the number of months of data available per language and identify the language with the fewest months
months_per_language = df.groupby('TAG')['YearMonth'].nunique()
print(months_per_language)

# Reshape the dataframe to pivot the dates as index and tags as columns with POST counts as values
reshaped_df = df.pivot(index='DATE', columns='TAG', values='POSTS')

# Display the reshaped dataframe
print(reshaped_df.head())

# Count the number of entries per programming language and fill missing values with 0
print(reshaped_df.count())
reshaped_df = reshaped_df.fillna(0)
print(reshaped_df.head())

# Plotting the rolling mean for each programming language to smooth out time series data
roll_df = reshaped_df.rolling(window=5).mean()

plt.figure(figsize=(16,10))
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.xlabel('Date', fontsize=14)
plt.ylabel('Number of Posts', fontsize=14)
plt.ylim(0, 35000)

# Plot the rolling mean for each language
for column in roll_df.columns:
    plt.plot(roll_df.index, roll_df[column], linewidth=3, label=roll_df[column].name)

plt.legend(fontsize=16)
plt.show()

# The above code demonstrates how to plot time series data with a rolling mean to visualize trends over time.
